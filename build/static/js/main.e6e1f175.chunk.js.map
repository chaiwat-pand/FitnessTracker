{"version":3,"sources":["Components/Timer/Timer.js","Images/running.png","Images/swimming.png","Images/walk.png","Images/weight.png","Images/bike.png","Images/batminton.png","Images/jump.png","Components/Activity/Activity.js","Components/DataProfile/ListRecords/ListRecords.js","Components/DataProfile/Modal/Modal.js","Components/DataProfile/RecordActivity.js","Components/Profile/Profile.js","Components/Home/Home.js","Components/Login/Login.js","Components/SignUp/Signup.js","Images/FE-logo.jpg","Components/Navbar/Navbar.js","App.js","index.js"],"names":["Timer","props","pad2","number","className","Math","floor","seconds","isActive","onClick","setIsActive","setSeconds","Activity","ACITIVITIES_TYPE","label","actSrc","running","batminton","biking","jumping","swimming","walking","weight","useState","slideAct","setSlideAct","activityName","timestamp","hr","mn","calories","description","duration","form","setForm","handleChange","event","target","name","value","type","prevFormData","useEffect","interval","setInterval","clearInterval","src","length","alt","todayDate","Date","newDate","date","arrayDate","toLocaleDateString","split","join","convertdate","console","log","onSubmit","preventDefault","onChange","required","id","min","max","cols","rows","Number","axios","method","data","withCredentials","url","then","res","RowRecord","actName","setModalEditOpen","modalEditOpen","setModelID","slice","style","marginTop","Modal","setData","canEdit","setCanEdit","actTypes","cal","des","searchID","modelID","e","a","isMounted","placeholder","parseInt","Record","formRecords","setFormRecords","reduce","totalMin","record","map","formRecord","_id","Profile","toEditUserInfo","setToEditUserInfo","displayName","aboutMe","favorite","caloriesGoal","durationGoal","profileData","setProfileData","editProfileAPI","navigate","useNavigate","autoComplete","prevState","Home","RecordActivity","Login","userRef","useRef","errRef","username","password","signInData","setSignInData","errMsg","setErrMsg","success","setSuccess","current","focus","handleSubmit","to","ref","aria-live","htmlFor","USER_REGEX","PWD_REGEX","Register","matchPassword","registerData","setRegisterData","validName","setValidName","userFocus","setUserFocus","validPwd","setValidPwd","pwdFocus","setPwdFocus","validMatch","setValidMatch","matchFocus","setMatchFocus","test","icon","faCheck","faTimes","aria-invalid","aria-describedby","onFocus","onBlur","faInfoCircle","aria-label","disabled","Navbar","logo","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6e1f175.chunk.js","sourcesContent":["import React from 'react'\nimport './Timer.css'\n\n\nfunction Timer(props) {\n\n  function toggle() {\n    props.setIsActive(!props.isActive);\n  }\n\n  function reset() {\n    props.setSeconds(0);\n    props.setIsActive(false);\n  }\n\n  function pad2(number) {\n    return (number < 10 ? '0' : '') + number\n  }\n\n  return (\n    <div>\n\n      <div className='acitivity-right-timer-time'>\n        <span>TIMER</span>\n        <div>\n          <div>{pad2(Math.floor(props.seconds / 3600))}</div> :\n          <div>{pad2((Math.floor(props.seconds / 60)) % 60)}</div> :\n          <div>{pad2(props.seconds % 60)}</div>\n        </div>\n      </div>\n\n\n      <div className='startStop'>\n        <button\n          className={`button button-primary button-primary-${props.isActive ? 'active' : 'inactive'}`}\n          onClick={toggle}>\n          {props.isActive ? 'PAUSE' : 'START'}\n        </button>\n\n        <button className=\"button\" onClick={reset}>\n          RESET\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Timer;","export default __webpack_public_path__ + \"static/media/running.b6a1aa7e.png\";","export default __webpack_public_path__ + \"static/media/swimming.c8d2f0e5.png\";","export default __webpack_public_path__ + \"static/media/walk.68718d1a.png\";","export default __webpack_public_path__ + \"static/media/weight.cef99b8f.png\";","export default __webpack_public_path__ + \"static/media/bike.6ba748c7.png\";","export default __webpack_public_path__ + \"static/media/batminton.6253b6c2.png\";","export default __webpack_public_path__ + \"static/media/jump.92bf3b97.png\";","import React, { useState, useEffect } from 'react'\nimport './Activity.css'\nimport Timer from '../Timer/Timer'\nimport axios from 'axios';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\n\nimport running from '../../Images/running.png'\nimport swimming from '../../Images/swimming.png'\nimport walking from '../../Images/walk.png'\nimport weight from '../../Images/weight.png'\nimport biking from '../../Images/bike.png'\nimport batminton from '../../Images/batminton.png'\nimport jumping from '../../Images/jump.png'\n\nfunction Activity() {\n    const ACITIVITIES_TYPE = [\n        { label: 'Running', actSrc: running },\n        { label: 'Batminton', actSrc: batminton },\n        { label: 'Bike', actSrc: biking },\n        { label: 'Jumping', actSrc: jumping },\n        { label: 'Swimming', actSrc: swimming },\n        { label: 'Walking', actSrc: walking },\n        { label: 'Weight', actSrc: weight },\n    ]\n\n    const [slideAct, setSlideAct] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n    const [form, setForm] = useState({\n        activityName: '',\n        timestamp: '',\n        hr: 0,\n        mn: 0,\n        calories: 0,\n        description: '',\n        duration: 0,\n    })\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setForm(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    function next() {\n        if (slideAct === (ACITIVITIES_TYPE.length - 1)) {\n            setSlideAct(0)\n        } else {\n            const nextSide = slideAct + 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    function previous() {\n        if (slideAct === 0) {\n            setSlideAct(ACITIVITIES_TYPE.length - 1)\n        } else {\n            const nextSide = slideAct - 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    function Finish() {\n        const hrTimer = Math.floor(seconds / 3600);\n        const mnTimer = (Math.floor(seconds / 60)) % 60;\n        const todayDate = new Date()\n        const convertdate = (date) => {\n            const arrayDate = todayDate.toLocaleDateString().split('/')\n            const sufferDate = [arrayDate[2],\n            (arrayDate[0] < 10 ? '0' : '') + arrayDate[0],\n            (arrayDate[1] < 10 ? '0' : '') + arrayDate[1],]\n            return sufferDate.join('-')\n        }\n        const newDate = convertdate(todayDate)\n        console.log(newDate)\n        setForm({\n            ...form,\n            activityName: ACITIVITIES_TYPE[slideAct].label,\n            timestamp: newDate\n        });\n        setSeconds(0)\n        setIsActive(false)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(form)\n    }\n\n    function record(event) {\n        form.duration = Number(form.hr * 60) + Number(form.mn)\n        axios({\n            method: 'POST',\n            data: {\n                activityName: form.activityName,\n                timestamp: form.timestamp,\n                duration: form.duration,\n                calories: form.calories,\n                description: form.description,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/me/records\",\n        }).then((res) => {\n            console.log(res);\n            setForm({\n                activityName: '',\n                timestamp: '',\n                hr: 0,\n                mn: 0,\n                calories: 0,\n                description: '',\n                duration: 0\n            })\n        })\n    }\n\n    return (\n        <div className='box-right'>\n\n            <div className=\"mainActivityPage\">\n                <div className='duration'>\n                    <Timer seconds={seconds} setIsActive={setIsActive} isActive={isActive} setSeconds={setSeconds} />\n                    <div className='divTree'>\n\n                        <section className='slider'>\n                            <img src='../../Images/arrow-left-color.png' className='s-select left-arrow' onClick={previous} alt='left' />\n                            <img src={ACITIVITIES_TYPE[slideAct].actSrc} alt='no internet' className='image' />\n                            <img src='../../Images/arrow-right-color.png' className='s-select right-arrow' onClick={next} alt='right' />\n                        </section>\n\n                        <div className='button-record'>\n                            <button className='button' onClick={Finish}>\n                                RECORD\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className='activityForm'>\n                    <h2>Your Activity </h2>\n                    <form className='typeInput' onSubmit={handleSubmit}>\n                        <div>\n                            <div className='form-actType'>\n                                <label>Activity&nbsp;&nbsp;</label>\n                                <input type=\"text\" value={form.activityName} name=\"activityName\" onChange={handleChange} required />\n                            </div>\n\n                            <div className='form-date'>\n                                <label>Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"date\" value={form.timestamp} name=\"date\" onChange={handleChange} required />\n                            </div>\n                            <br />\n\n                            <div>\n                                <label id='duration'>Duration</label> <br />\n                                <input type=\"number\" value={form.hr} name=\"hr\" onChange={handleChange} min={0} max={24} required></input>\n                                <label>&nbsp;Hour&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.mn} name=\"mn\" onChange={handleChange} min={0} max={59} required></input>\n                                <label>&nbsp;Minute</label>\n                            </div>\n\n                            <div>\n                                <label>Burnt&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.calories} name=\"calories\" onChange={handleChange} min={0} max={9999} />\n                                <label>&nbsp;&nbsp;Calorie(s)</label>\n                            </div>\n\n                            <div>\n                                <label >Description: </label> <br />\n                                <textarea name=\"description\" cols=\"20\" rows=\"3\" value={form.description} onChange={handleChange}></textarea>\n                            </div>\n\n                            <button type=\"submit\" onClick={record} className=\"button\">Submit</button>\n\n                        </div>\n\n                    </form>\n                </div>\n\n            </div>\n\n        </div >\n    )\n}\nexport default Activity;","import React from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\n// import './ListRecord.css'\n\n\nfunction RowRecord({ id, actName, date, duration, calories, setModalEditOpen, modalEditOpen, setModelID }) {\n\n    const openModal = () => {\n        setModalEditOpen(!modalEditOpen);\n        setModelID(id);\n    }\n    return (\n        <>\n            <div className='data-activity' key={id} >\n                <div className='data-activity-user'>\n                    {date.slice(0, 10)}\n                </div>\n                <div className='data-activity-user'>\n                    {actName}\n                </div>\n                <div className='data-activity-user'>\n                    {duration} min\n                </div>\n                <div className='data-activity-user'>\n                    {calories} cal\n                </div>\n                <div className='data-activity-user'>\n                    {/* <button className=\"iconModal\" onClick={() => {setModalEditOpen(true)}}><FontAwesomeIcon icon={faSquarePen} size=\"lg\" border className=\"colorFontAS\"/></button>&nbsp; */}\n                    <button style={{ marginTop: 0 }} className=\"iconModal\" onClick={openModal}><FaEdit className=\"colorFontAS\" /></button>\n                </div>\n\n            </div>\n\n        </>\n    )\n\n}\nexport default RowRecord;","import React, { useState, useEffect } from 'react'\nimport './Modal.css'\nimport { FaTimes, FaEdit, FaRegSave, FaTrashAlt } from \"react-icons/fa\";\n\nimport axios from 'axios';\n\nfunction Modal(props) {\n    const [data, setData] = useState();\n    const [canEdit, setCanEdit] = useState(false);\n    const [form, setForm] = useState({\n        actTypes: '',\n        date: '',\n        duration: 0,\n        cal: 0,\n        des: \"\"\n    });\n    const searchID = props.modelID;\n\n    const handleChange = e => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    useEffect(() => {\n        let isMounted = true;\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        }).then((res) => {\n            if (isMounted) setData(res.data);\n        });\n        return () => { isMounted = false }\n    }, [searchID]);\n\n    async function deletePost(e) {\n        await axios({\n            method: \"DELETE\",\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        });\n        props.setModalEditOpen(false)\n    };\n\n    const toEdit = () => {\n        setForm({\n            actTypes: data[0].activityName,\n            date: data[0].timestamp.slice(0, 10),\n            duration: data[0].duration,\n            cal: data[0].calories,\n            des: data[0].description\n        });\n        setCanEdit(!canEdit);\n    };\n\n    const save = () => {\n        axios({\n            method: \"PUT\",\n            data: {\n                activityName: form.actTypes,\n                timestamp: new Date(form.date),\n                duration: parseInt(form.duration),\n                calories: parseInt(form.cal),\n                description: form.des,\n            },\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        }).then((res) => {\n            // console.log(res);\n        });\n        // setCanEdit(!canEdit);\n        props.setModalEditOpen(false)\n    };\n\n    return (\n        <div className='model-container'>\n            <div className='model-content'>\n                <strong>Your Record</strong>\n                <br />\n                <br />\n                Activity Name:{data && (canEdit ?\n                    <input type='text' placeholder='Enter Your Activity Name'\n                        name=\"actTypes\" value={form.actTypes}\n                        onChange={handleChange} />\n                    : <div>{data[0].activityName}</div>)}\n                <br />\n                Date:{data && (canEdit ?\n                    <input type='date' placeholder='Enter Date'\n                        name=\"date\" value={form.date}\n                        onChange={handleChange} />\n                    : <div>{data[0].timestamp.slice(0, 10)}</div>)}\n                <br />\n                duration:{data && (canEdit ?\n                    <input type='number' placeholder='Enter your activity duration'\n                        name=\"duration\" value={form.duration}\n                        onChange={handleChange} />\n                    : <div>{data[0].duration} min</div>)}\n                <br />\n                Calories:{data && (canEdit ?\n                    <input type='number' placeholder='Enter your activity calories'\n                        name=\"cal\" value={form.cal}\n                        onChange={handleChange} />\n                    : <div>{data[0].calories} cal</div>)}\n                <br />\n                Description:{data && (canEdit ?\n                    <input type='text' placeholder='Enter your activity description'\n                        name=\"des\" value={form.des}\n                        onChange={handleChange} />\n                    : <div>{data[0].description}</div>)}\n                <br />\n                <div className='model-content-btn'>\n                    {canEdit ?\n                        <button className='iconModal' onClick={save}>Save</button>\n                        : <button className='iconModal modal-button' onClick={toEdit}>Edit</button>}\n                    <button className='iconModal modal-button' onClick={deletePost}>Delete</button>\n                    <button className=\"iconModal modal-button\" onClick={() => props.setModalEditOpen(false)}>Go Back</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './Record.css'\n\nimport ListRecord from './ListRecords/ListRecords'\nimport Modal from './Modal/Modal';\n\nfunction Record(props) {\n\n  const [formRecords, setFormRecords] = useState([]);\n  const [modalEditOpen, setModalEditOpen] = useState(false);\n  const [modelID, setModelID] = useState();\n  // const setLogged = props.setIsLogin;\n\n  useEffect(() => {\n    let isMounted = true;\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/users/me/records\",\n    }).then((res) => {\n      if (isMounted) {\n        setFormRecords(res.data);\n        // setLogged(true)\n      };\n    });\n    return () => { isMounted = false }\n  }, [formRecords]);\n\n  const currentMin = formRecords.reduce((totalMin, record) => {\n    return totalMin + record.duration\n  }, 0);\n\n  return (\n    <div className='record-container'>\n      {modalEditOpen ? <Modal setModalEditOpen={setModalEditOpen} modelID={modelID} /> :\n        (<>\n          <div className='top-plus'>\n            {/* <div className='data-result'>\n              GOAL\n              <br />\n              {props.data && props.data.durationGoal} min\n            </div>\n            <div className='data-result'>\n              CURRENT TOTAL\n              <br />\n              {currentMin} min\n            </div> */}\n          </div>\n          <div className='data-activity'>\n            <div className='data-activity-user'>\n              <strong>DATE</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>ACTIVITY</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>DURATION</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>CALORIES</strong>\n            </div>\n            <div className='data-activity-user'>\n            </div>\n          </div>\n          {formRecords.map((formRecord) =>\n            <ListRecord\n              key={formRecord._id}\n              id={formRecord._id}\n              actName={formRecord.activityName}\n              date={formRecord.timestamp}\n              duration={formRecord.duration}\n              calories={formRecord.calories}\n              description={formRecord.description}\n              //  setModalEditOpen={setModalEditOpen}\n              setModalEditOpen={setModalEditOpen}\n              modalEditOpen={modalEditOpen}\n              setModelID={setModelID}\n            />\n          )}\n        </>)}\n    </div>\n  )\n}\n\nexport default Record","import React, { useEffect, useState } from 'react'\nimport '../EditProfile/EditProfile.css'\nimport '../DataProfile/DataProfile.css'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction Profile() {\n    const [toEditUserInfo, setToEditUserInfo] = useState(false)\n\n    const [profileData, setProfileData] = useState({\n        displayName: '',\n        aboutMe: '',\n        favorite: '',\n        caloriesGoal: '',\n        durationGoal: ''\n    })\n\n    const [data, setData] = useState(null)\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setProfileData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    function handleEditUserInfo(event) {\n        setToEditUserInfo(prevState => !prevState)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        console.log(profileData)\n    }\n\n    function editProfileAPI() {\n        axios({\n            method: 'PUT',\n            data: {\n                favorite: profileData.favorite,\n                aboutMe: profileData.aboutMe,\n                displayName: profileData.displayName,\n                // durationGoal: profileData.durationGoal,\n                // caloriesGoal: profileData.caloriesGoal,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/edit\",\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    const editProfileData = () => {\n        editProfileAPI();\n    };\n\n    let navigate = useNavigate()\n    function logOut() {\n        console.log(profileData)\n        axios({\n            method: \"DELETE\",\n            withCredentials: true,\n            url: \"http://localhost:4000/users/logout\",\n        }).then((res) => {\n            console.log(res)\n        });\n        navigate('/login')\n    }\n\n    useEffect(() => {\n        let isMounted = true;\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:4000/users/me\",\n        }).then((res) => {\n            setProfileData(res.data)\n        })\n    }, [data])\n\n    return (\n        <div className='profile'>\n            <div>\n                <img src='../../Images/PROFILE.png' alt='profile-pic' className='pro-pic' />\n            </div>\n\n            {toEditUserInfo ?\n                <form onSubmit={handleSubmit}>\n                    <div className='data-profile-edit'>\n\n                        <input\n                            type='text'\n                            className='editProfileUserName'\n                            placeholder='Profile Name'\n                            name='displayName'\n                            value={profileData.displayName}\n                            onChange={handleChange}\n                            autoComplete=\"off\"\n                        />\n\n                        <div className='data-profile-user'>\n                            <textarea\n                                type='text'\n                                className='editProfile'\n                                placeholder='Fun Fact'\n                                name='aboutMe'\n                                value={profileData.aboutMe}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                        <div className='data-profile-user'>\n                            <textarea\n                                type='text'\n                                className='editProfile'\n                                placeholder='Favorite Sport'\n                                name='favorite'\n                                value={profileData.favorite}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                    </div>\n                    <button className='edit-profile' onClick={editProfileAPI}>Save</button>\n                </form>\n                :\n                <div className=\"data-profile\">\n\n                    {profileData.displayName}\n\n                    <div className=\"data-profile-user\">\n                        {profileData.aboutMe}\n                        <br />\n\n                    </div>\n\n                    <div className=\"data-profile-user\">\n                        {profileData.favorite}\n                        <br />\n\n                    </div>\n\n                </div>}\n\n            <button type=\"button\" className=\"edit-profile\" onClick={handleEditUserInfo}>\n                {toEditUserInfo ? 'Done' : 'Edit'}\n            </button>\n\n            <button type=\"button\" onClick={logOut} className=\"edit-profile\">\n                Logout\n            </button>\n\n        </div>\n    )\n\n}\n\nexport default Profile;","import React from 'react'\nimport './Home.css'\nimport Activity from '../Activity/Activity'\nimport RecordActivity from '../DataProfile/RecordActivity';\nimport Profile from '../Profile/Profile';\n\nfunction Home() {\n\n\n  return (\n    <div className=\"record-box-main\">\n\n      <div className='userAndAddTop'>\n        <Profile />\n        <Activity />\n      </div>\n      <RecordActivity />\n    </div>\n  )\n}\nexport default Home;","import axios from 'axios';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'\n// import AuthContext from './context/AuthProvider';\n\nfunction Login() {\n    // const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [signInData, setSignInData] = useState({\n        username: '',\n        password: ''\n    })\n\n    let navigate = useNavigate()\n\n    // const [user, setUser] = useState('');\n    // const [pwd, setPwd] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [signInData.username, signInData.password])\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setSignInData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(signInData);\n        // setUser('');\n        // setPwd('');\n        // setSuccess(true);\n        axios({\n            method: 'POST',\n            data: {\n                username: signInData.username,\n                password: signInData.password,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/login\",\n        }).then((res) => {\n            console.log(res.data);\n            if (res.data === 'Successfully Authenticated') {\n                setSuccess(true);\n                navigate('/home')\n            }\n        })\n    }\n\n    return (\n        <div className='registrationForm'>\n            {success ? (\n                <section>\n                    <h1>You are logged in!</h1>\n                    <br />\n                    <p>\n                        {/* <a href=''>Go to Home</a>  */}\n                        <Link to=\"/\">Go to Home</Link>\n                    </p>\n                </section>\n            ) :\n                (\n                    <section className='section-registration'>\n                        <p ref={errRef} className={errMsg ? 'errMsg' : 'offscreen'}\n                            aria-live='assertive'>{errMsg}</p>\n                        <h1 className='signIn' ><b>SIGN-IN</b></h1>\n                        <form onSubmit={handleSubmit} className='form-registration'>\n                            <label htmlFor='username'>Username:</label>\n                            <input\n                                type='text'\n                                id='username'\n                                ref={userRef}\n                                autoComplete='off'\n                                onChange={handleChange}\n                                value={signInData.username}\n                                name='username'\n                                required\n                            />\n                            <label htmlFor='password'>Password:</label>\n                            <input\n                                type='password'\n                                id='password'\n                                onChange={handleChange}\n                                value={signInData.password}\n                                name='password'\n                                required\n                            />\n                            <button>Sign In</button>\n                        </form>\n\n                        <p>\n                            Need an Account?<br />\n                            <span>\n                                {/* <a href='#'>Sign Up</a> */}\n                                <Link to=\"/register\">Sign Up</Link>\n                            </span>\n                        </p>\n                    </section>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default Login","import React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Signup.css'\nimport axios from 'axios'\n// import { Navigate, Link } from \"react-router-dom\";\n\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    // let navigate = Navigate();\n\n    const [registerData, setRegisterData] = useState({\n        username: '',\n        password: '',\n        matchPassword: '',\n    })\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setRegisterData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    // const [matchPwd, setMatchPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setValidName(USER_REGEX.test(registerData.username));\n    }, [registerData.username])\n\n    useEffect(() => {\n        setValidPwd(PWD_REGEX.test(registerData.password));\n        setValidMatch(registerData.password === registerData.matchPassword);\n    }, [registerData.password, registerData.matchPassword])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [registerData.username, registerData.password, registerData.matchPassword])\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(registerData)\n        axios({\n            method: 'POST',\n            data: {\n                username: registerData.username,\n                password: registerData.password,\n            },\n            withCredentials: true,\n            url: 'http://localhost:4000/users/register',\n        }).then((res) => {\n            console.log(res);\n            if (res.data === 'User Created') {\n                // navigate('login')\n                setSuccess(true)\n            }\n        })\n    }\n\n    return (\n        <div className='registrationForm'>\n            {/* This will navigate to sign in page, to be editted */}\n            {success ? (\n                <section>\n                    <h1>Success!</h1>\n                    <p>\n                        {/* <a href=\"#\">Sign In</a> */}\n                        <Link to=\"/login\">Sign In</Link>\n                    </p>\n                </section>\n            ) : (\n                <section className='section-registation'>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1 className='register'><b>REGISTER</b></h1>\n                    <form onSubmit={handleSubmit} className='form-registration'>\n                        <label htmlFor=\"username\">\n                            Username:\n                            <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validName || !registerData.username ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={handleChange}\n                            value={registerData.username}\n                            name='username'\n                            required\n                            aria-invalid={validName ? \"false\" : \"true\"}\n                            aria-describedby=\"uidnote\"\n                            onFocus={() => setUserFocus(true)}\n                            onBlur={() => setUserFocus(false)}\n                        />\n                        <p id=\"uidnote\" className={userFocus && registerData.username && !validName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            4 to 24 characters.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, underscores, hyphens allowed.\n                        </p>\n\n\n                        <label htmlFor=\"password\">\n                            Password:\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !registerData.password ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={handleChange}\n                            value={registerData.password}\n                            name='password'\n                            required\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\n                            aria-describedby=\"pwdnote\"\n                            onFocus={() => setPwdFocus(true)}\n                            onBlur={() => setPwdFocus(false)}\n                        />\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            8 to 24 characters.<br />\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n                        </p>\n\n\n                        <label htmlFor=\"confirm_pwd\">\n                            Confirm Password:\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && registerData.matchPassword ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !registerData.matchPassword ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_pwd\"\n                            onChange={handleChange}\n                            value={registerData.matchPassword}\n                            name='matchPassword'\n                            required\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\n                            aria-describedby=\"confirmnote\"\n                            onFocus={() => setMatchFocus(true)}\n                            onBlur={() => setMatchFocus(false)}\n                        />\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must match the first password input field.\n                        </p>\n\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\n                    </form>\n                    <p>\n                        Already registered?<br />\n                        <span className=\"line\">\n                            {/* <a href=\"#\">Sign In</a> */}\n                            <Link to=\"/login\">Sign In</Link>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </div>\n    )\n}\n\nexport default Register","export default __webpack_public_path__ + \"static/media/FE-logo.789455b6.jpg\";","import React from 'react'\nimport './Navbar.css'\nimport logo from '../../Images/FE-logo.jpg'\n\n\nfunction Navbar() {\n\n    return (\n        <nav className=\"nav-design-template\">\n            <div className=\"nav-design-left\">\n                <div className=\"nav-design-left-row-one\">\n                    <img className=\"nav-design-image\" src={logo} />\n                    <h1>FitnessTracker</h1>\n                </div>\n                <h4>Improve your Fitness, Improve your Life</h4>\n            </div>\n\n            {/* <div className=\"nav-design-right\"> */}\n            <p className=\"nav-design-right\">Created by Chaiwat Pandey</p>\n            {/* </div> */}\n        </nav>\n    )\n}\n\nexport default Navbar;","import {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Login from './Components/Login/Login';\nimport Register from './Components/SignUp/Signup';\nimport Navbar from './Components/Navbar/Navbar'\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path='/home' element={<Home />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/register' element={<Register />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}